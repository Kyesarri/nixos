# Auto-generated using compose2nix v0.3.1.
# add ghcr.io/browserless/chromium to stack
{
  pkgs,
  lib,
  ...
}: {
  systemd.services."podman-changedetection" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
    };
    after = [
      "podman-network-internal.service"
      "podman-volume-changedetection_changedetection-data.service"
    ];
    requires = [
      "podman-network-internal.service"
      "podman-volume-changedetection_changedetection-data.service"
    ];
    partOf = [
      "podman-compose-changedetection-root.target"
    ];
    wantedBy = [
      "podman-compose-changedetection-root.target"
    ];
  };

  systemd.services."podman-volume-changedetection_changedetection-data" = {
    path = [pkgs.podman];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
    };
    script = ''
      podman volume inspect changedetection_changedetection-data || podman volume create changedetection_changedetection-data
    '';
    partOf = ["podman-compose-changedetection-root.target"];
    wantedBy = ["podman-compose-changedetection-root.target"];
  };

  systemd.targets."podman-compose-changedetection-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = ["multi-user.target"];
  };
  # Containers
  virtualisation.oci-containers.containers."changedetection" = {
    image = "ghcr.io/dgtlmoon/changedetection.io";
    volumes = [
      "changedetection_changedetection-data:/datastore:rw"
    ];
    ports = [
      # "127.0.0.1:5000:5000/tcp"
    ];
    log-driver = "journald";
    extraOptions = [
      "--hostname=changedetection"
      "--network-alias=changedetection"
      "--network=internal"
    ];
  };
}
