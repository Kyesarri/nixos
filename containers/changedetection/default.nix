# Auto-generated using compose2nix v0.3.1.
{
  pkgs,
  lib,
  ...
}: {
  systemd.services."podman-changedetection" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
    };
    after = [
      "podman-network-internal.service"
      "podman-volume-changedetection_changedetection-data.service"
    ];
    requires = [
      "podman-network-internal.service"
      "podman-volume-changedetection_changedetection-data.service"
    ];
    partOf = ["podman-compose-changedetection-root.target"];
    wantedBy = ["podman-compose-changedetection-root.target"];
  };

  systemd.services."podman-chrome" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
    };
    after = ["podman-network-internal.service"];
    requires = ["podman-network-internal.service"];
    partOf = ["podman-compose-changedetection-root.target"];
    wantedBy = ["podman-compose-changedetection-root.target"];
  };

  systemd.services."podman-volume-changedetection_changedetection-data" = {
    path = [pkgs.podman];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
    };
    script = ''
      podman volume inspect changedetection_changedetection-data || podman volume create changedetection_changedetection-data
    '';
    partOf = ["podman-compose-changedetection-root.target"];
    wantedBy = ["podman-compose-changedetection-root.target"];
  };

  systemd.targets."podman-compose-changedetection-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = ["multi-user.target"];
  };
  # containers
  virtualisation.oci-containers.containers."changedetection" = {
    image = "ghcr.io/dgtlmoon/changedetection.io";
    log-driver = "journald";
    environment = {
      # WEBDRIVER_URL = "http://chrome:3000";
      PLAYWRIGHT_DRIVER_URL = ws://chrome:3000;
    };
    volumes = [
      "changedetection_changedetection-data:/datastore:rw"
    ];
    ports = [
      # "5000:5000"
    ];
    extraOptions = [
      "--hostname=changedetection"
      "--network-alias=changedetection"
      "--network=internal"
    ];
  };
  virtualisation.oci-containers.containers."chrome" = {
    image = "dgtlmoon/sockpuppetbrowser:latest";
    log-driver = "journald";
    environment = {};
    volumes = [];
    ports = [
      # "4444:4444"
      # "7900:7900"
    ];
    extraOptions = [
      # "--window-size=1920,1080"
      "--shm-size=2048m"
      "--hostname=chrome"
      "--network-alias=chrome"
      "--network=internal"
    ];
  };
}
