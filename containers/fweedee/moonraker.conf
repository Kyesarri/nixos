# moonraker.conf

[server]
host: 0.0.0.0
#  The host address in which to bind the HTTP server.  Default is to bind
#  to all ipv4 interfaces.  If set to "all" the server will bind to all
#  ipv4 an ipv6 interfaces.
port: 7125
#   The port the HTTP server will listen on.  Default is 7125
ssl_port: 7130
#   The port to listen on for SSL (HTTPS) connections.  Note that the HTTPS
#   server will only be started of the certificate and key options outlined
#   below are provided.  The default is 7130.
klippy_uds_address: /tmp/klippy_uds
#   The address of Unix Domain Socket used to communicate with Klippy. This
#   option accepts Jinja2 Templates, where the configured data path is
#   passed to the template context, for example:
#     klippy_uds_address: {data_path}/comms/klippy.sock
#
#   Default is /tmp/klippy_uds.
route_prefix: /moonraker/e3v3se/server/info
#   A prefix prepended to the path for each HTTP endpoint.  For example
#   if the route_prefix is set to moonraker/printer1, then the server info
#   endpoint is available at:
#     http://myprinter.local/moonraker/printer1/server/info
#
#   This is primarily useful for installations that feature multiple instances
#   of Moonraker, as it allows a reverse proxy identify the correct instance based
#   on the path and redirect requests without a rewrite.  Note that frontends must feature
#   support for HTTP endpoints with a route prefix to communicate with Moonraker when
#   this option is set. The default is no route prefix.
max_upload_size: 1024
#   The maximum size allowed for a file upload (in MiB).  Default is 1024 MiB.
max_websocket_connections: 50
#   The maximum number of concurrently open websocket connections.
#   The default is 50.



#   The path to a self signed ssl certificate.  The default is no path, which
#   disables HTTPS.
#ssl_certificate_path:
#   The path to the private key used to signed the certificate.  The default
#   is no path, which disables HTTPS.
#ssl_key_path:

# [file_manager]
# config_path: ~/klipper_config
# log_path: ~/klipper_logs
#   When set to True the file manager will add uploads to the job_queue when
#   the `start_print` flag has been set. The default if False.
# queue_gcode_uploads: False
#   When set to True gcode files will be run through a "preprocessor"
#   during metdata extraction if object tags are detected.  This preprocessor
#   replaces object tags with G-Code commands compatible with Klipper's
#   "cancel object" functionality.  Note that this process is file I/O intensive,
#   it is not recommended for usage on low resource SBCs such as a Pi Zero.
#   The default is False.
# enable_object_processing: True

[database]
database_path: ~/.moonraker_database
enable_database_debug: False

[data_store]
#   The maximum number of temperature values to store for each sensor. Note
#   that this value also applies to the "target", "power", and "fan_speed"
#   if the sensor reports them. The default is 1200, which is enough to
#   store approximately 20 minutes of data at one value per second.
temperature_store_size: 1200
#   The maximum number "gcode lines" to store. The default is 1000.
gcode_store_size:  1000

[job_queue]
#   When set to true the job queue will attempt to load the next
#   pending job when Klipper reports as "Ready".  If the queue has
#   been paused it will automatically resume.  Note that neither
#   the job_transition_delay nor the job_transition_gcode are
#   applied in this case.  The default is False.
load_on_startup: False
#   When set to True the queue will automatically transition to
#   the next job in the queue after the current job is complete.
#   This is useful for belt printers and other machines with the
#   ability to automate clearing of the build area.  When False
#   the queue will be paused after each job is loaded, requiring
#   that users manually resume to load the next print.  The default
#   is False.
automatic_transition: False
#   The amount of time to delay after completion of a job before
#   loading the next job on the queue.  The default is no delay.
#job_transition_delay:
#   A gcode to execute after the completion of a job before the next
#   job is loaded.  If a "job_transition_delay" has been configured
#   this gcode will run after the delay.  The default is no gcode.
#job_transition_gcode:

[authorization]
#   When set to True a user login is required for authorization if at least
#   one user has been created, overriding the "trusted_clients" configuration.
#   If no users have been created then trusted client checks will apply.
#   The default is False.
force_logins: False
#   The time, in days, after which a user is forced to re-enter their
#   credentials to log in.  This period begins when a logged out user
#   first logs in.  Successive logins without logging out will not
#   renew the timeout.  The default is 90 days.
#login_timeout:
cors_domains:
  *.home
  *://localhost

trusted_clients:
  2a02:810d:9340:33f6::/64
  172.29.199.0/25
  192.168.87.0/24
  127.0.0.1
  10.0.0.0/8

#[mqtt]
#address: 192.168.178.200
#port: 1883
#username: {secrets.mqtt_credentials.username}
#password: {secrets.mqtt_credentials.password}
#   The protocol to use when connecting to the Broker.  May be v3.1,
#   v3.1.1, and v5.  The default is v3.1.1
#mqtt_protocol: v3.1.1
#   If set to true the MQTT client will subscribe to API topic, ie:
#     {instance_name}/moonraker/api/request
#   This can be set to False if the user does not wish to allow API
#   requests over MQTT.  The default is True. 
#enable_moonraker_api: True
#instance_name: printer/V2.660
#default_qos: 0
#   The QOS level to use for the API topics. If not provided, the
#   value specified by "default_qos" will be used.
#api_qos: