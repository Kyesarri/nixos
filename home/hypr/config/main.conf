$mainMod = SUPER

# import nix-colors
source = ~/.config/hypr/colours.conf

# import hy3 config
source = ~/nixos/home/hypr/config/hy3.conf

exec-once = sleep 4 && gnome-keyring-daemon --start --components = pkcs11, secrets, ssh
exec-once = sleep 6 && dbus-update-activation-environment --systemd --all
exec-once = udiskie

#  ./hosts/hostname/per-device.nix
source = ~/.config/hypr/per-device.conf

env = XCURSOR_SIZE,15
env = WLR_NO_HARDWARE_CURSORS,1

misc {
    disable_hyprland_logo = true
    disable_splash_rendering = true
    mouse_move_enables_dpms = true
    key_press_enables_dpms = true
    vfr = true
    allow_session_lock_restore = true
    animate_manual_resizes = true
    animate_mouse_windowdragging = false
}

input {
    kb_layout = us
    kb_variant =
    kb_model =
    kb_options =
    kb_rules =
    follow_mouse = 1 # cursor movement will change focus
    follow_mouse_threshold = 0.0 # minimum movement to change focus2321
    focus_on_close = 1 # on window close, focus the window currently under the cursor
    mouse_refocus = true
    float_switch_override_focus = 2
    repeat_delay = 300
    repeat_rate = 50
    sensitivity = 0
    scroll_method = 2fg

    touchpad {
        natural_scroll = yes
        drag_3fg = 1
        disable_while_typing = true
    }
}

cursor {
    warp_on_change_workspace = 1 # warps cursor to middle of screen when changing workspace
}

general {
    gaps_in = 5
    gaps_out = 13 # adjusted to match waybar config / position on edges
    border_size = 3
    col.active_border = $ce $cd 10deg
    col.inactive_border = $c4 $c1 90deg
    resize_on_border = true
    hover_icon_on_border = true
    extend_border_grab_area = 20
    allow_tearing = true

    layout = hy3
    snap {
        enabled = true
    }
}

debug:overlay = false

decoration {
    rounding = 8
    rounding_power = 7
    active_opacity = 1
    inactive_opacity = 1
    dim_inactive = true
    dim_strength = 0
    shadow {
        enabled = false
        sharp = false
        range = 30
        render_power = 3
        color = $c0
        color_inactive = $c0
    }
}
render {
    direct_scanout = 1
    new_render_scheduling = true
}

ecosystem {
    no_update_news = true
    no_donation_nag = true
}

animations {
    enabled = true
    # first_launch_animation = true

    bezier = smoothOut, 0.1, 0, 0.66, -0.56
    bezier = smoothIn, 0.1, 1, 0.5, 1
    bezier = linear, 0, 0, 1, 1
    bezier = snappy, 0.5, 0.93, 0, 1

    animation = fadeIn, 1, 10, snappy
    animation = fadeOut, 1, 10, snappy
    animation = fadeSwitch, 1, 10, snappy
    animation = windowsIn, 1, 5, smoothIn # opening windows
    animation = windowsOut, 1, 5, smoothOut # closing windows
    animation = windowsMove, 1, 5, snappy # resize / maximize / minimize windows
    animation = fade, 1, 5, smoothIn
    animation = fadeDim, 1, 5, smoothIn
    animation = workspaces, 1, 5, snappy, slidefadevert 20%  # change workspace

    animation = border, 1, 3, linear # window change focus, border animation
    animation = borderangle, 1, 180, linear, loop # to animate all? borders
}

dwindle {
    pseudotile = false
    preserve_split = true # you probably want this
    smart_resizing = true
    force_split = 2
}

workspace = 1, default:true, persistent:true
workspace = 2, on-created-empty:librewolf

binds {
  workspace_back_and_forth = false
  allow_workspace_cycles = true
  workspace_center_on = 1
  scroll_event_delay = 600
}

bind = $mainMod, S, exec, ~/nixos/scripts/dunst/hyprpicker.sh

# sound
binde = , xf86audioraisevolume, exec, ~/nixos/scripts/dunst/pipewire.sh up
binde = , xf86audiolowervolume, exec, ~/nixos/scripts/dunst/pipewire.sh down

# brightness
# # screen
binde = , XF86MonBrightnessUp, exec, ~/nixos/scripts/dunst/brightnessctl.sh up
binde = , XF86MonBrightnessDown, exec, ~/nixos/scripts/dunst/brightnessctl.sh down

# # keyboard
binde = , XF86KbdBrightnessUp, exec, ~/nixos/scripts/dunst/asusctl.sh up
binde = , XF86KbdBrightnessDown, exec, ~/nixos/scripts/dunst/asusctl.sh down

# workspace
bind = $mainMod, C, killactive,
bind = $mainMod, M, exit,
bind = $mainMod, V, togglefloating,
bind = $mainMod, J, togglesplit,
bind = $mainMod, L, fullscreenstate, 2, 0

# Move focus with mainMod + arrow keys
bind = $mainMod, left, hy3:movefocus, l
bind = $mainMod, right, hy3:movefocus, r
bind = $mainMod, up, hy3:movefocus, u
bind = $mainMod, down, hy3:movefocus, d

# Switch workspaces with mainMod + [0-9]
# # added switching wallpapers on workspace switch
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# hy3 group binding
bind = $mainMod, i, hy3:makegroup, h

# # make selected floating window pinned across all workspaces
bind = $mainMod, P, pin

debug:disable_logs = false
debug:enable_stdout_logs = true

windowrulev2 = float,class:electron # don't believe these are required, leaving here
windowrulev2 = size 960 540, class:electron
windowrulev2 = center, class:electron
windowrulev2 = bordercolor $ce override, pinned:1

windowrulev2 = suppressevent maximize, class:.* # You'll probably like this.

# # wildcard per-app enabled in each ./home/package*/*.nix ##
source = ~/.config/hypr/per-app/*.conf